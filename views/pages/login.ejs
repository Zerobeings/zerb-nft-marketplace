<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head'); %>
</head>
<body class="container">

<header>
   
</header>


<main>
      
  <div class="centerLogin">
    <div class="accountFont">ACCOUNT</div>
    <form id="userForm" action="">
      <select name="user" id="user" class="loginoptions">
        <option value="zerb">Zerb 👾</option>
        <!-- <option value="freshfrogsNFT">FreshFrogsNFT 🐸</option> -->
        <option value="tinydinos">tiny dinos 🤏🏽🦖</option>
        <option value="guest">Guest 🍀</option>
      </select>
      <div id="btns" class="invisible">
        <input type="submit" value="login" id="login" class="buttonloginoptions">
      </div>          
    </form>
      <div id="btns2" class="invisible">
        <button id="logout" class="buttonlogoutoptions">logout</button>
      </div>
    <p class="footer footerLogin">
        Powered by 
        <a class="link footerLink" target="_blank" href="https://privateparty.dev/">Privateparty</a>
        <div class="footerImgDiv">
          <a class="footerImgLink" href="https://mint.zerobeings.xyz/">
            <img class="footerImg" src="/images/mint.png" />
          </a>
        </div>
        <!-- <div class="footerImgDiv">
          <a href="#" class="link" onclick="window.displayPreferenceModal();return false;" id="termly-consent-preferences">Consent Preferences</a>
        </div> -->
    </p>
  </div>
  <pre class='session hidden'></pre>
  <div class='error'></div>
</main>

<script>
    const userSelect = document.getElementById('userForm');
    const params = new URLSearchParams(window.location.search)
    const party = new Privateparty({})
    document.addEventListener("DOMContentLoaded", async () => {
      let session = await party.session("zerb", { fresh: true }) || await party.session("guest", { fresh: true }) || await party.session("tinydinos", { fresh: true }) || await party.session("freshfrogsNFT", { fresh: true });
      
      if (session && session.account) {
        // logged in => display logout button
        document.querySelector("#login").classList.add("hidden")
        document.querySelector("#user").classList.add("hidden")
        document.querySelector("#logout").addEventListener("click", async (e) => {
          
          try {
            if(session.aud === "zerb"){
              let session = await party.disconnect("zerb")
              let callback = params.get("callback") ? params.get("callback") : location.href
              location.href = '/login'
            }
            if(session.aud === "guest"){
              let session = await party.disconnect("guest")
              let callback = params.get("callback") ? params.get("callback") : location.href
              location.href = '/login'
            }
            if(session.aud === "tinydinos"){
              let session = await party.disconnect("tinydinos")
              let callback = params.get("callback") ? params.get("callback") : location.href
              location.href = '/login'
            }
            if(session.aud === "freshfrogsNFT"){
              let session = await party.disconnect("freshfrogsNFT")
              let callback = params.get("callback") ? params.get("callback") : location.href
              location.href = '/login'
            }
          } catch (e) {
            alert(e.message)
          }
        })
      } else {
        // logged out => display login button
        document.querySelector("#logout").classList.add("hidden")
        userSelect.addEventListener("submit", async (e) => {
          e.preventDefault(); //prevent default submission behavior
          const data = new FormData(e.target);
          const userselected = data.get("user");
          try {
            if(userselected === "zerb"){
              let session = await party.connect(userselected, null, null)
              let callback = params.get("callback") ? params.get("callback") : location.href
              location.href = '/goerli-marketgm'
            }
            if(userselected === "guest"){
              let session = await party.connect(userselected, null, null)
              let callback = params.get("callback") ? params.get("callback") : location.href
              location.href = '/goerli-marketgm'
            }
            if(userselected === "tinydinos"){
              let session = await party.connect(userselected, null, null)
              let callback = params.get("callback") ? params.get("callback") : location.href
              location.href = '/goerli-marketgm'
            }
            if(userselected === "freshfrogsNFT"){
              let session = await party.connect(userselected, null, null)
              let callback = params.get("callback") ? params.get("callback") : location.href
              location.href = '/goerli-marketgm'
            }
          } catch (e) {
            alert(e.message)
          }
        })
      }
     document.querySelector("#btns").classList.remove("invisible")
     document.querySelector("#btns2").classList.remove("invisible")   
    })
    </script>
</body>
</html>